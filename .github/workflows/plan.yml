name: Terraform Plan

on:
  pull_request:

env:
  aws_region: us-east-1
  terraform_version: 1.6.5
  terraform_directory: ./
  terragrunt_version: 0.67.10
  tfvars_file_name: deploy.hcl
  pr_number: ${{ github.event.number }}

jobs:
  build_jar:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build Hexburguer Jar
      run: |
        mvn package -DskipTests
        mkdir build
        cp target/*.jar build/hexburguer.jar

    - name: Gera Artefato
      uses:  actions/upload-artifact@v4
      with:
        name: Package
        path: build
    
  build_docker:
    needs: build_jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Download Artefato
        uses: actions/download-artifact@v4.1.8
        with:
          name: Package
          path: build
      
      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}


      - name: Gera Tag Versao
        run: |
          echo "RELEASE_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: | 
            guirodriguero/hexburger:latest
            guirodriguero/hexburger:${{ env.RELEASE_VERSION }}
        
  terraform_plan:
    needs: build_docker
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == false
    steps:
      - uses: actions/checkout@v3

      - name: Terraform Plan
        uses: ./.github/plan
        with:
          terraform_version: ${{ env.terraform_version }}
          terraform_directory: ${{ env.terraform_directory }}
          pr_number: ${{ env.pr_number }}
          aws_region: ${{ env.aws_region }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          terragrunt_version: ${{ env.terragrunt_version }}
          tfvars_file_name: ${{ env.tfvars_file_name }}

  publish_ecr:
    needs: build_docker
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == false
    steps:
      - uses: actions/checkout@v3

      - name: Publish to ECR
        uses: ./.github/publish
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws_region: ${{ env.aws_region }}
          aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          image_tag: ${{ env.RELEASE_VERSION }}